<tool id="pancancer_apply_weights" name="PAPAA: PanCancer apply weights" version="@VERSION@">
  <description>apply weights</description>
  <macros>
    <import>macros.xml</import>
  </macros>
  <expand macro="requirements"/>
  <expand macro="stdio"/>
  <version_command><![CDATA['papaa_apply_weights.py' --version]]></version_command>
  <command><![CDATA[
  mkdir 'classifier' &&
  ln -s '${pancan_classifier_summary}' 'classifier/classifier_summary.txt' &&
  ln -s '${pancan_classifier_coefficients}' 'classifier/classifier_coefficients.tsv' &&
  papaa_apply_weights.py 
  --classifier_summary 'classifier'
  @INPUTS_BASIC@
  @INPUTS_COPY_NUMBER_CLASS_FILE_CONDITIONAL@
  > '${log}'
 ]]></command>
  <inputs>
    <expand macro="inputs_basic"/>
    <expand macro="inputs_copy_number_class_file_conditional"/>
    <param argument="--classifier_summary" label="pancancer classifier summary" name="pancan_classifier_summary" optional="false" type="data" format="txt" help="classifer_summary.txt"/>
    <param label="pancancer classifier coefficients" name="pancan_classifier_coefficients" optional="false" type="data" format="tabular" help="classifier_coefficients.tsv"/>
  </inputs>
  <outputs>
    <data format="txt" name="log" label="${tool.name} on ${on_string} (Log)"/>
    <data format="tabular" name="classifier_decisions" label="${tool.name} on ${on_string} (classifier_decisions.tsv)" from_work_dir="classifier/classifier_decisions.tsv"/>
  </outputs>
  <tests>
        <test>
            <param name="x_matrix" value="pancan_rnaseq_freeze_t1p.tsv.gz" ftype="tabular"/>
            <param name="filename_mut" value="pancan_mutation_freeze_t1p.tsv.gz" ftype="tabular"/>
            <param name="filename_mut_burden" value="mutation_burden_freeze.tsv" ftype="tabular"/>
            <param name="filename_sample" value="sample_freeze.tsv" ftype="tabular"/>
            <param name="copy_number" value="yes"/>
            <param name="filename_copy_loss" value="copy_number_loss_status_t10p.tsv.gz" ftype="tabular"/>
            <param name="filename_copy_gain" value="copy_number_gain_status_t10p.tsv.gz" ftype="tabular"/>
            <param name="filename_cancer_gene_classification" value="vogelstein_cancergenes.tsv" ftype="tabular"/>
            <param name="pancan_classifier_summary" value="classifier_summary.txt" ftype="txt"/>
            <param name="pancan_classifier_coefficients" value="classifier_coefficients.tsv" ftype="tabular"/>
            <output name="log" file="apply_weights_Log.txt"/>
            <output name="classifier_decisions" file="classifier_decisions.tsv" />
        </test>
    </tests>
  <help><![CDATA[
    Pancancer_Aberrant_Pathway_Activity_Analysis scripts/apply_weights.py:

      --classifier                          String of the location of classifier file
      --copy_number                         Supplement Y matrix with copy number events
      --x_matrix                            Filename of features to use in model
      --filename_mut                        Filename of sample/gene mutations to use in model
      --filename_mut_burden                 Filename of sample mutation burden to use in model
      --filename_sample                     Filename of patient/samples to use in model
      --filename_copy_loss                  Filename of copy number loss
      --filename_copy_gain                  Filename of copy number gain
      --filename_cancer_gene_classification Filename of cancer gene classification table

      Output:
      - Generates .tsv file of classifier scores and other covariate info for plotting creates " classifier_decisions.tsv" file and Apply a logit transform [y = 1/(1+e^(-wX))] to output probabilities

      ]]></help>
</tool>
